#!/bin/bash

# Define the URL and report file
URL="https://timemanager-frontend.onrender.com"
REPORT_FILE="pentest_report_$(date +%F).txt"
WORDLIST="./common.txt"
PASSWORD_FILE="rockyou.txt"  # Update to the file with password hashes you want to test


# Prepare the report file
echo "Pentest Report for $URL" > "$REPORT_FILE"
echo "Date: $(date)" >> "$REPORT_FILE"
echo "======================================" >> "$REPORT_FILE"

# 1. DIRB Scan
echo "Running DIRB scan..."
#dirb "$URL" "$WORDLIST" -o dirb_result.txt & pid=$!
wait $pid
echo "### DIRB Scan Results ###" >> "$REPORT_FILE"
cat dirb_result.txt >> "$REPORT_FILE"
cat dirb_result.txt  # Display output to console
echo "======================================" >> "$REPORT_FILE"

# 2. Nmap Scan
echo "Running Nmap scan..."
nmap -sS -O -sV "$URL" -oN nmap_result.txt & pid=$!
wait $pid
echo "### Nmap Scan Results ###" >> "$REPORT_FILE"
cat nmap_result.txt >> "$REPORT_FILE"
cat nmap_result.txt  # Display output to console
echo "======================================" >> "$REPORT_FILE"

# 3. SQLMap Test
echo "Running SQLMap test..."
sqlmap -u "$URL?id=1" --batch --output-dir=sqlmap_results & pid=$!
wait $pid
echo "### SQLMap Results ###" >> "$REPORT_FILE"
cat sqlmap_results/timemanager-frontend.onrender.com/log.txt >> "$REPORT_FILE"
cat sqlmap_results/timemanager-frontend.onrender.com/log.txt  # Display output to console
echo "======================================" >> "$REPORT_FILE"

# 4. John the Ripper Test
if [[ -f "$PASSWORD_FILE" ]]; then
    echo "Running John the Ripper test..."
    john --wordlist=./rockyou.txt "$PASSWORD_FILE" --format=raw-md5 & pid=$!
    wait $pid
    echo "### John the Ripper Results ###" >> "$REPORT_FILE"
    john --show "$PASSWORD_FILE" >> "$REPORT_FILE"
    john --show "$PASSWORD_FILE"  # Display output to console
    echo "======================================" >> "$REPORT_FILE"
else
    echo "No password file found. Skipping John the Ripper test."
fi

# 5. Nikto Scan
echo "Running Nikto scan..."
nikto -h "$URL" -C all -output nikto_result.txt & pid=$!
wait $pid
echo "### Nikto Scan Results ###" >> "$REPORT_FILE"
cat nikto_result.txt >> "$REPORT_FILE"
cat nikto_result.txt  # Display output to console
echo "======================================" >> "$REPORT_FILE"

# Display summary
echo "All tests completed! Review the full report at $REPORT_FILE"
