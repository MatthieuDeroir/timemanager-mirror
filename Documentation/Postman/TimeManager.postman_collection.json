{
	"info": {
		"_postman_id": "139333db-ce39-4841-a65d-b105e625ee7d",
		"name": "TimeManager",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Scripts\" tab**\n\nAdding tests to your requests can help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/fa30ea0a-373d-4545-a668-e7b283cca343/aW1hZ2UucG5n\" alt=\"\" height=\"1530\" width=\"2162\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n    \n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29955927"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "User by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/:userId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "1"
								}
							]
						}
					},
					"response": [
						{
							"name": "User by id",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-CSRF-TOKEN",
										"value": "/zNrL0CfusSuuNbaf1gjudXMgcduJZFWtLLKcU8QQU8=",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/users/:userId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "5"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "date",
									"value": "Mon, 21 Oct 2024 07:53:02 GMT"
								},
								{
									"key": "content-length",
									"value": "48"
								},
								{
									"key": "vary",
									"value": "accept-encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "cache-control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "x-request-id",
									"value": "GABohlYKQkPk2SIAAAEH"
								}
							],
							"cookie": [],
							"body": "Missing authentication token"
						}
					]
				},
				{
					"name": "User by credential",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users?email=michel.couet@epitech.eu&username=michel",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": "michel.couet@epitech.eu"
								},
								{
									"key": "username",
									"value": "michel"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user\":{\r\n    \"email\": \"matthieu.deroir@gmail.com\",\r\n    \"password\": \"yoyoyo\",\r\n    \"username\": \"maawox\"\r\n  }\r\n    \r\n    \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user\":\r\n    {\r\n        \"email\":\"arthur.lefranÃ§ois@epitech.eu\",\r\n        \"username\":\"arthur\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/:userId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/:userId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "34"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Working Time",
			"item": [
				{
					"name": "All",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/workingtime/:userId?start=2019-09-08 08:00:00&end=2019-09-08 17:00:00",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"workingtime",
								":userId"
							],
							"query": [
								{
									"key": "start",
									"value": "2019-09-08 08:00:00"
								},
								{
									"key": "end",
									"value": "2019-09-08 17:00:00"
								}
							],
							"variable": [
								{
									"key": "userId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "one",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/workingtime/:userId/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"workingtime",
								":userId",
								":id"
							],
							"variable": [
								{
									"key": "userId",
									"value": "1"
								},
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"workingtime\":\r\n    {\r\n        \"start\":\"2019-09-08 08:00:00\",\r\n        \"end\":\"2019-09-08 17:00:00\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/workingtime/:userId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"workingtime",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"workingtime\":\r\n    {\r\n        \"start\":\"2020-09-08 08:00:00\",\r\n        \"end\":\"2020-09-08 17:00:00\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/workingtime/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"workingtime",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/workingtime/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"workingtime",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Clocking",
			"item": [
				{
					"name": "get",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/clocks/:userId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"clocks",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"clocks\":\r\n    {\r\n        \"time\":\"2019-09-08 17:00:00\",\r\n        \"status\":true\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/clocks/:userId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"clocks",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Session",
			"item": [
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/auth/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"manager@manager.com\",\n    \"password\": \"password\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Team",
			"item": [
				{
					"name": "Get all teams",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-CSRF-TOKEN",
								"value": "S7TUxjWVtKvY/NHhiRIr8KPyLMOGmyS7iv5HEF6YGdU=",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/teams/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"teams",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get team by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-CSRF-TOKEN",
								"value": "S7TUxjWVtKvY/NHhiRIr8KPyLMOGmyS7iv5HEF6YGdU=",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/teams/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"teams",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a team",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-CSRF-TOKEN",
								"value": "S7TUxjWVtKvY/NHhiRIr8KPyLMOGmyS7iv5HEF6YGdU=",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"team\": {\n        \"name\": \"Swag\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/teams/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"teams",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a team",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-CSRF-TOKEN",
								"value": "S7TUxjWVtKvY/NHhiRIr8KPyLMOGmyS7iv5HEF6YGdU=",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"team\": {\n        \"name\": \"Swagzer\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/teams/:team_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"teams",
								":team_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a team",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-CSRF-TOKEN",
								"value": "S7TUxjWVtKvY/NHhiRIr8KPyLMOGmyS7iv5HEF6YGdU=",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"team\": {\n        \"name\": \"Swagzer\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/teams/:team_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"teams",
								":team_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "4"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "UserTeams",
			"item": [
				{
					"name": "Get users by their team",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-CSRF-TOKEN",
								"value": "S7TUxjWVtKvY/NHhiRIr8KPyLMOGmyS7iv5HEF6YGdU=",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"team\": {\n        \"name\": \"Swagzer\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/teams/users/:team_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"teams",
								"users",
								":team_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get teams of a user",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-CSRF-TOKEN",
								"value": "S7TUxjWVtKvY/NHhiRIr8KPyLMOGmyS7iv5HEF6YGdU=",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/teams/:user_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"teams",
								":user_id"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a user to a team",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-CSRF-TOKEN",
								"value": "S7TUxjWVtKvY/NHhiRIr8KPyLMOGmyS7iv5HEF6YGdU=",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_id\": 1,\n    \"team_id\": 3\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user_teams/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user_teams",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a user from a team",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-CSRF-TOKEN",
								"value": "S7TUxjWVtKvY/NHhiRIr8KPyLMOGmyS7iv5HEF6YGdU=",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_id\": 1,\n    \"team_id\": 3\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user_teams/remove",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user_teams",
								"remove"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Logs",
			"item": [
				{
					"name": "Get all logs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-CSRF-TOKEN",
								"value": "S7TUxjWVtKvY/NHhiRIr8KPyLMOGmyS7iv5HEF6YGdU=",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/logs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"logs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get logs by user",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "http://localhost:4000/api"
		}
	]
}